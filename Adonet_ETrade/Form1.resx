<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>